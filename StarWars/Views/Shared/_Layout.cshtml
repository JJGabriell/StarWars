<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
</head>
<body style="background-image: url(/Content/Imagens/starWarsImg.jpg)">
    <div id="mySidenav" class="sidenav">
        <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
        <a href="/Home">Home</a>
        <a href="/Home/Films">Films</a>
        <a href="/Home/Persons">Persons</a>
        <a href="/Home/Planets">Planets</a>
        <a href="/Home/Species">Species</a>
        <a href="/Home/Starships">Starships</a>
        <a href="/Home/Vehicles">Vehicles</a>
    </div>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-dark">
        <span style="font-size:30px;cursor:pointer; color:white" onclick="openNav()">&#9776; Star Wars</span>
    </nav>
    <div class="container body-content">
        @RenderBody()
        <hr />
    </div>

    <div class="modal fade" id="modal-details" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="film details modal" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5"></h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table table-bordered table-striped table-hover">
                        <tbody id="details-table">
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary bg-danger" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <script type="text/javascript">

        function openNav() {
            document.getElementById("mySidenav").style.width = "250px";
        }

        function closeNav() {
            document.getElementById("mySidenav").style.width = "0";
        }
        const modalDetails = new bootstrap.Modal('#modal-details', {
            keyboard: false
        });

        setTimeout(() => {
            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
        }, 500);

        function abrirModalDetails(title, info) {

            $("#modal-details .modal-title").text(title);
            $("#details-table").html("");

            info.map(i => {
                const html = `
                               <tr>
                                 <td class="col-3 fw-bold">${i[0]}</td>
                                 <td class="${hasInformation(i[1]) ? "" : "fst-italic fw-light"}">${i[1]}</td>
                               </tr>`
                $("#details-table").append(html);
            });

            modalDetails.show();
        }

        function hasInformation(data) {
            return !(["unknown", "n/a"].includes(data));
        }
        function numberWithUnit(data, unit) {
            return hasInformation(data) && !isNaN(parseFloat(data)) ? parseFloat(data).toLocaleString() + " " + unit : data
        }

        let Worlds = {};
        let speciesDict = {};
        let peoples = {}

        function getPeopleName(url) {
            let people = peoples[url]

            if (!people) {
                if (url) {
                    $.ajax({
                        url: url,
                        type: "GET",
                        async: false,
                        success: function (data) {
                            people = data.name;
                        },
                        error: function (error) {
                            people = "unknown"
                        }
                    });
                } else {
                    people = "unknown"
                }

                peoples[url] = people;

            }
            return people;
        }

        async function getWorldName(url) {
            let world = Worlds[url]

            if (!world) {
                if (url) {
                    await $.ajax({
                        url: url,
                        type: "GET",
                        async: true,
                        success: function (data) {
                            world = data.name;
                        },
                        error: function (error) {
                            world = "unknown"
                        }
                    });
                } else {
                    world = "unknown"
                }

                Worlds[url] = world;

            }

            return world;
        }

        async function getSpecieName(url) {
            let specie = speciesDict[url]

            if (!specie) {
                if (url) {
                    await $.ajax({
                        url: url,
                        type: "GET",
                        async: true,
                        success: function (data) {
                            specie = data.name;
                        },
                        error: function (error) {
                            specie = "unknown"
                        }
                    });
                } else {
                    specie = "unknown"
                }

                speciesDict[url] = specie;

            }
            return specie;
        }

    </script>
</body>
</html>
